{"version":3,"sources":["Models/Player.ts","Models/Team.ts","Modules/TeamForm/TeamForm.tsx","Services/DatabaseService.ts","Services/AuthorizationService.ts","Utils/AppDependency.ts","Modules/MainScreen/MainScreen.tsx","Models/Sport.ts","Modules/SportForm/SportForm.tsx","Models/Protocol.ts","Modules/Protocol/CreateProtocolForm.tsx","Models/GameEvent.ts","Components/EventsMatrix.tsx","Modules/Protocol/ProtocolScreen.tsx","Models/EventType.ts","Modules/EventsTypeForm/EventTypeForm.tsx","Utils/DefaultDataSeeder.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["uuidv4","require","Player","name","uuid","this","Team","players","TeamForm","props","dependencies","state","teamName","undefined","redirect","split","map","team","database","saveObject","setState","to","className","type","onChange","event","target","value","placeholder","onClick","saveTeam","React","Component","DatabaseService","object","collectionName","collection","JSON","parse","localStorage","getItem","push","setItem","stringify","id","find","item","index","indexOf","AuthorizationService","password","sessionStorage","AppDependency","authService","MainScreen","teams","sports","protocols","eventTypes","getCollection","prompt","authUser","window","location","reload","alert","isAuthorized","authenticate","bind","href","sport","key","protocol","date","player","eventType","Sport","SportForm","sportName","saveSport","Protocol","firstTeam","secondTeam","events","CreateProtocolForm","protocolDate","sportId","match","params","getItemById","saveProtocol","GameEvent","time","player1","player2","EventsMatrix","statistic","Map","has","playerInfo","set","get","x","eventInfo","console","log","loadStatistic","Array","from","values","eventsMatrixRef","firstPlayer","secondPlayer","createRef","loadProtocol","concat","updateItemById","protocolId","current","Number","selected","disabled","label","saveEvent","length","sort","a","b","ref","EventType","EventTypeForm","saveEventType","DefaultDataSeeder","App","appDependency","makeDefaultDependencies","seedDefaults","path","render","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fc2e8aa0.chunk.js","sourcesContent":["import {StorableWithID} from \"../Services/DatabaseService\";\r\n\r\nconst uuidv4 = require('uuid/v4');\r\n\r\nexport default class Player implements StorableWithID{\r\n    public name: string;\r\n    public uuid: string;\r\n\r\n    constructor(name: string) {\r\n        this.name = name;\r\n        this.uuid = uuidv4();\r\n    }\r\n}","import Player from \"./Player\";\r\nimport {StorableWithID} from \"../Services/DatabaseService\";\r\nconst uuidv4 = require('uuid/v4');\r\n\r\nexport default class Team implements StorableWithID{\r\n    public name: string;\r\n    public uuid: string;\r\n    public players: Player[];\r\n\r\n    constructor(name: string, players: Player[] = []) {\r\n        this.name = name;\r\n        this.uuid = uuidv4();\r\n        this.players = players;\r\n    }\r\n}","import React, {ReactNode} from 'react';\r\nimport {HasDatabaseService} from \"../../Utils/AppDependency\";\r\nimport Player from \"../../Models/Player\";\r\nimport Team from \"../../Models/Team\";\r\nimport {Redirect} from 'react-router-dom';\r\n\r\ntype Dependencies = HasDatabaseService;\r\n\r\ntype Props = {\r\n    dependencies: Dependencies\r\n}\r\n\r\ntype State = {\r\n    teamName?: string,\r\n    players?: string,\r\n    redirect?: ReactNode\r\n}\r\n\r\nexport default class TeamForm extends React.Component<Props, State>{\r\n    dependencies: Dependencies;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.dependencies = props.dependencies;\r\n        this.state = {\r\n            teamName: undefined,\r\n            players: undefined,\r\n            redirect: undefined,\r\n        };\r\n    }\r\n\r\n    saveTeam(): void {\r\n        if (this.state.players !== undefined && this.state.teamName !== undefined) {\r\n            let players: Player[] = [];\r\n            players = this.state.players.split(\",\").map((name): Player => new Player(name));\r\n            let team = new Team(this.state.teamName, players);\r\n            this.dependencies.database.saveObject(team, \"teams\");\r\n            this.setState({\r\n                redirect: <Redirect to=\"/\" />,\r\n            });\r\n        }\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        return(\r\n            <div className=\"container\">\r\n                {this.state.redirect}\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"mt-4\">Создать команду</h1>\r\n                        <input type=\"text\"\r\n                               onChange={(event) => this.setState({teamName: event.target.value})}\r\n                               placeholder=\"Название\"\r\n                               className=\"form-control mt-4\"/>\r\n                        <input type=\"text\"\r\n                               onChange={(event) => this.setState({players: event.target.value})}\r\n                               placeholder=\"Игроки (через запятую)\"\r\n                               className=\"form-control mt-4\"/>\r\n                         <button className=\"btn btn-primary mt-4\"\r\n                                 onClick={() => this.saveTeam()}>Сохранить</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","export interface StorableWithID {\r\n    uuid: string;\r\n}\r\n\r\nexport default class DatabaseService {\r\n    public saveObject<T>(object: T, collectionName: string): void {\r\n        let collection = JSON.parse(localStorage.getItem(collectionName) || \"[]\") as [T];\r\n        collection.push(object);\r\n        localStorage.setItem(collectionName, JSON.stringify(collection));\r\n    }\r\n\r\n    public getCollection<T>(collectionName: string): [T] {\r\n        return JSON.parse(localStorage.getItem(collectionName) || \"[]\") as [T];\r\n    }\r\n\r\n    public getItemById<T extends StorableWithID>(collectionName: string, id: string): T | undefined {\r\n        let collection = JSON.parse(localStorage.getItem(collectionName) || \"[]\") as [T];\r\n        return collection.find(item => item.uuid === id);\r\n    }\r\n\r\n    public updateItemById<T extends StorableWithID>(collectionName: string, id: string, object: T): void {\r\n        let collection = JSON.parse(localStorage.getItem(collectionName) || \"[]\") as [T];\r\n        let item = collection.find(item => item.uuid === id);\r\n        if(item === undefined)\r\n            return;\r\n        let index = collection.indexOf(item);\r\n        collection[index] = object;\r\n        localStorage.setItem(collectionName, JSON.stringify(collection));\r\n    }\r\n}","export default class AuthorizationService {\r\n    authUser(password: string): boolean {\r\n        if(password === \"admin\") {\r\n            sessionStorage.setItem(\"isLogged\", \"true\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isAuthorized(): boolean {\r\n        let session = sessionStorage.getItem(\"isLogged\");\r\n\r\n        return session !== null;\r\n    }\r\n}","import DatabaseService from \"../Services/DatabaseService\";\r\nimport AuthorizationService from \"../Services/AuthorizationService\";\r\n\r\nexport interface HasDatabaseService {\r\n    database: DatabaseService;\r\n}\r\n\r\nexport interface HasAuthorizationService {\r\n    authService: AuthorizationService;\r\n}\r\n\r\nexport default class AppDependency implements HasDatabaseService, HasAuthorizationService{\r\n    database: DatabaseService;\r\n    authService: AuthorizationService;\r\n\r\n    constructor(database: DatabaseService, authService: AuthorizationService) {\r\n        this.database = database;\r\n        this.authService = authService;\r\n    }\r\n\r\n    static makeDefaultDependencies(): AppDependency {\r\n        let database = new DatabaseService();\r\n        let authService = new AuthorizationService();\r\n\r\n        return new AppDependency(database, authService);\r\n    }\r\n}","import React from 'react';\r\nimport {HasAuthorizationService, HasDatabaseService} from \"../../Utils/AppDependency\";\r\nimport Team from \"../../Models/Team\";\r\nimport Sport from \"../../Models/Sport\";\r\nimport Protocol from \"../../Models/Protocol\";\r\nimport EventType from \"../../Models/EventType\";\r\n\r\ntype Dependencies = HasDatabaseService & HasAuthorizationService;\r\n\r\ntype Props = {\r\n    dependencies: Dependencies\r\n}\r\n\r\ntype State = {\r\n    teams: Team[],\r\n    sports: Sport[],\r\n    protocols: Protocol[],\r\n    eventTypes: EventType[],\r\n}\r\n\r\nexport default class MainScreen extends React.Component<Props, State> {\r\n    dependencies: Dependencies;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.dependencies = props.dependencies;\r\n        this.state = {\r\n            teams: [],\r\n            sports: [],\r\n            protocols: [],\r\n            eventTypes: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        let teams = this.dependencies.database.getCollection<Team>(\"teams\");\r\n        let sports = this.dependencies.database.getCollection<Team>(\"sports\");\r\n        let protocols = this.dependencies.database.getCollection<Protocol>(\"protocols\");\r\n        let eventTypes = this.dependencies.database.getCollection<EventType>(\"eventTypes\");\r\n        this.setState({\r\n            teams: teams,\r\n            sports: sports,\r\n            protocols: protocols,\r\n            eventTypes: eventTypes,\r\n        });\r\n    }\r\n\r\n    authenticate(): void {\r\n        let password = prompt(\"Пароль\");\r\n\r\n        if(password === null)\r\n            return;\r\n\r\n        if(this.dependencies.authService.authUser(password)) {\r\n            window.location.reload();\r\n        } else {\r\n            alert(\"Неверный пароль!\");\r\n        }\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    {\r\n                        (!this.dependencies.authService.isAuthorized()) ?\r\n                            <div className=\"col-md-12\">\r\n                                <button className=\"btn btn-primary mt-4\" onClick={this.authenticate.bind(this)}>Войти</button>\r\n                            </div> : null\r\n                    }\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"mt-4\">Виды спорта</h1>\r\n                        {\r\n                            (this.dependencies.authService.isAuthorized()) ?\r\n                                <a className=\"btn btn-primary mb-4\" href=\"/addSport\">Создать</a> : null\r\n                        }\r\n                        <ul className=\"list-group\">\r\n                            {this.state.sports.map(sport => {\r\n                                return (\r\n                                    <li key={sport.uuid} className=\"list-group-item d-flex justify-content-between\">\r\n                                        {sport.name}\r\n                                        {\r\n                                            (this.dependencies.authService.isAuthorized()) ?\r\n                                                <a className=\"btn btn-primary\" href={\"/protocols/create/\" + sport.uuid}>Создать протокол</a> : null\r\n                                        }\r\n                                    </li>\r\n                                );\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"mt-4\">Протоколы</h1>\r\n                        <ul className=\"list-group\">\r\n                            {this.state.protocols.map(protocol => {\r\n                                return (\r\n                                    <li key={protocol.uuid} className=\"list-group-item d-flex justify-content-between\">\r\n                                        {protocol.date} - {protocol.sport.name}\r\n                                        <a className=\"btn btn-primary\" href={\"/protocols/\" + protocol.uuid}>Просмотр</a>\r\n                                    </li>\r\n                                );\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"mt-4\">Команды</h1>\r\n                        {\r\n                            (this.dependencies.authService.isAuthorized()) ?\r\n                                <a className=\"btn btn-primary mb-4\" href=\"/addTeam\">Создать</a> : null\r\n                        }\r\n                        <ul className=\"list-group\">\r\n                            {this.state.teams.map(team => {\r\n                                return (\r\n                                    <li key={team.uuid} className=\"list-group-item\">\r\n                                        <strong>{team.name}</strong>\r\n                                        <br/>\r\n                                        Игроки:&nbsp;\r\n                                        {team.players.map(player => {\r\n                                            return (\r\n                                                <span key={player.uuid}>{player.name},</span>\r\n                                            );\r\n                                        })}\r\n                                    </li>\r\n                                );\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"mt-4\">Типы событий</h1>\r\n                        {\r\n                            (this.dependencies.authService.isAuthorized()) ?\r\n                                <a className=\"btn btn-primary mb-4\" href=\"/addEventType\">Создать</a> : null\r\n                        }\r\n                        <ul className=\"list-group mb-4\">\r\n                            {this.state.eventTypes.map(eventType => {\r\n                                return (\r\n                                    <li key={eventType.uuid} className=\"list-group-item\">\r\n                                        {eventType.name}\r\n                                    </li>\r\n                                );\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import {StorableWithID} from \"../Services/DatabaseService\";\r\n\r\nconst uuidv4 = require('uuid/v4');\r\n\r\nexport default class Sport implements StorableWithID {\r\n    public name: string;\r\n    public uuid: string;\r\n\r\n    constructor(name: string) {\r\n        this.name = name;\r\n        this.uuid = uuidv4();\r\n    }\r\n}","import React, {ReactNode} from 'react';\r\nimport {HasDatabaseService} from \"../../Utils/AppDependency\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport Sport from \"../../Models/Sport\";\r\n\r\ntype Dependencies = HasDatabaseService;\r\n\r\ntype Props = {\r\n    dependencies: Dependencies\r\n}\r\n\r\ntype State = {\r\n    sportName?: string,\r\n    redirect?: ReactNode\r\n}\r\n\r\nexport default class SportForm extends React.Component<Props, State>{\r\n    dependencies: Dependencies;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.dependencies = props.dependencies;\r\n        this.state = {\r\n            sportName: undefined,\r\n            redirect: undefined,\r\n        };\r\n    }\r\n\r\n    saveSport(): void {\r\n        if (this.state.sportName !== undefined) {\r\n            let sport = new Sport(this.state.sportName);\r\n            this.dependencies.database.saveObject(sport, \"sports\");\r\n            this.setState({\r\n                redirect: <Redirect to=\"/\" />,\r\n            });\r\n        }\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        return(\r\n            <div className=\"container\">\r\n                {this.state.redirect}\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"mt-4\">Создать вид спорта</h1>\r\n                        <input type=\"text\"\r\n                               onChange={(event) => this.setState({sportName: event.target.value})}\r\n                               placeholder=\"Название\"\r\n                               className=\"form-control mt-4\"/>\r\n                        <button className=\"btn btn-primary mt-4\"\r\n                                onClick={() => this.saveSport()}>Сохранить</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import Sport from \"./Sport\";\r\nimport GameEvent from \"./GameEvent\";\r\nimport Team from \"./Team\";\r\nconst uuidv4 = require('uuid/v4');\r\n\r\nexport default class Protocol {\r\n    uuid: string;\r\n    sport: Sport;\r\n    date: string;\r\n    events: GameEvent[];\r\n    firstTeam: Team;\r\n    secondTeam: Team;\r\n\r\n    constructor(sport: Sport, date: string, firstTeam: Team, secondTeam: Team, events = []) {\r\n        this.sport = sport;\r\n        this.date = date;\r\n        this.firstTeam = firstTeam;\r\n        this.secondTeam = secondTeam;\r\n        this.events = events;\r\n        this.uuid = uuidv4();\r\n    }\r\n}","import React, {ReactNode} from 'react';\r\nimport {HasDatabaseService} from \"../../Utils/AppDependency\";\r\nimport {Redirect, RouteComponentProps} from 'react-router-dom';\r\nimport Sport from \"../../Models/Sport\";\r\nimport Protocol from \"../../Models/Protocol\";\r\nimport Team from \"../../Models/Team\";\r\n\r\ntype Dependencies = HasDatabaseService;\r\n\r\ntype Props = {\r\n    dependencies: Dependencies,\r\n}\r\n\r\ntype State = {\r\n    sport?: Sport,\r\n    protocolDate?: string,\r\n    redirect?: ReactNode,\r\n    teams: Team[],\r\n    firstTeam?: string,\r\n    secondTeam?: string,\r\n}\r\n\r\ninterface RouteParams {\r\n    sportId: string\r\n}\r\n\r\nexport default class CreateProtocolForm extends React.Component<Props & RouteComponentProps<RouteParams>, State>{\r\n    dependencies: Dependencies;\r\n\r\n    constructor(props: Props & RouteComponentProps<RouteParams>) {\r\n        super(props);\r\n        this.dependencies = props.dependencies;\r\n        this.state = {\r\n            sport: undefined,\r\n            protocolDate: undefined,\r\n            redirect: undefined,\r\n            teams: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        let { sportId } = this.props.match.params;\r\n        if (sportId) {\r\n            let sport = this.dependencies.database.getItemById<Sport>(\"sports\", sportId);\r\n            if(!sport) {\r\n                this.setState({\r\n                    redirect: <Redirect to=\"/\"/>\r\n                });\r\n            }\r\n            this.setState({\r\n                sport: sport,\r\n            });\r\n        } else {\r\n            this.setState({\r\n                redirect: <Redirect to=\"/\"/>\r\n            });\r\n        }\r\n\r\n        let teams = this.dependencies.database.getCollection<Team>(\"teams\");\r\n        this.setState({\r\n            teams: teams,\r\n            firstTeam: teams[0].uuid,\r\n            secondTeam: teams[0].uuid,\r\n        });\r\n    }\r\n\r\n    saveProtocol(): void {\r\n        if(this.state.protocolDate !== undefined &&\r\n            this.state.sport !== undefined &&\r\n            this.state.firstTeam !== undefined &&\r\n            this.state.secondTeam !== undefined) {\r\n            let firstTeam = this.state.teams.find(team => team.uuid === this.state.firstTeam);\r\n            let secondTeam = this.state.teams.find(team => team.uuid === this.state.secondTeam);\r\n            if(firstTeam !== undefined && secondTeam !== undefined) {\r\n                let protocol = new Protocol(this.state.sport,\r\n                    this.state.protocolDate,\r\n                    firstTeam,\r\n                    secondTeam);\r\n                this.dependencies.database.saveObject(protocol, \"protocols\");\r\n                this.setState({\r\n                    redirect: <Redirect to=\"/\"/>,\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        return(\r\n            <div className=\"container\">\r\n                {this.state.redirect}\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"mt-4\">Создать протокол</h1>\r\n                        <h3>Для: { (this.state.sport) ? this.state.sport.name : null }</h3>\r\n                        <input type=\"date\"\r\n                               onChange={(event) => this.setState({protocolDate: event.target.value})}\r\n                               placeholder=\"Название\"\r\n                               className=\"form-control mt-4\"/>\r\n                        Первая команда:<br/>\r\n                        <select className=\"form-control\"\r\n                                value={this.state.firstTeam}\r\n                                onChange={event => this.setState({firstTeam: event.target.value})}>\r\n                            {this.state.teams.map(team => {\r\n                                return(\r\n                                    <option value={team.uuid}>{team.name}</option>\r\n                                );\r\n                            })}\r\n                        </select>\r\n                        Вторая команда:<br/>\r\n                        <select className=\"form-control\"\r\n                                value={this.state.secondTeam}\r\n                                onChange={event => this.setState({secondTeam: event.target.value})}>\r\n                            {this.state.teams.map(team => {\r\n                                return(\r\n                                    <option value={team.uuid}>{team.name}</option>\r\n                                );\r\n                            })}\r\n                        </select>\r\n                        <button className=\"btn btn-primary mt-4\"\r\n                                onClick={() => this.saveProtocol()}>Сохранить</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import {StorableWithID} from \"../Services/DatabaseService\";\r\nimport EventType from \"./EventType\";\r\nimport Player from \"./Player\";\r\nconst uuidv4 = require('uuid/v4');\r\n\r\nexport default class GameEvent implements StorableWithID{\r\n    time: number;\r\n    eventType: EventType;\r\n    player1: Player;\r\n    player2?: Player;\r\n    uuid: string;\r\n\r\n    constructor(time: number, eventType: EventType, player1: Player, player2?: Player) {\r\n        this.time = time;\r\n        this.eventType = eventType;\r\n        this.player1 = player1;\r\n        this.player2 = player2;\r\n        this.uuid = uuidv4();\r\n    }\r\n}","import React, {ReactNode} from 'react';\r\nimport Protocol from \"../Models/Protocol\";\r\nimport EventType from \"../Models/EventType\";\r\n\r\ntype Props = {\r\n    protocol: Protocol,\r\n};\r\n\r\ntype State = {\r\n    statistic?: Map<string, Map<string, Map<string, string>>>;\r\n    eventTypes: EventType[],\r\n};\r\n\r\nexport default class EventsMatrix extends React.Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            statistic: undefined,\r\n            eventTypes: [],\r\n        }\r\n    }\r\n\r\n    public loadStatistic(): void {\r\n        let events = this.props.protocol.events;\r\n\r\n        let statistic = new Map();\r\n\r\n        events.map(event => {\r\n            if (!statistic.has(event.player1.uuid)) {\r\n                let playerInfo = new Map();\r\n                playerInfo.set(\"name\", event.player1.name);\r\n                statistic.set(event.player1.uuid, playerInfo);\r\n            }\r\n\r\n            let playerInfo = statistic.get(event.player1.uuid);\r\n\r\n            if(this.state.eventTypes.find(x => x.uuid === event.eventType.uuid) === undefined) {\r\n                let eventTypes = this.state.eventTypes;\r\n                eventTypes.push(event.eventType);\r\n                this.setState({\r\n                    eventTypes: eventTypes\r\n                });\r\n            }\r\n\r\n            if (!playerInfo.has(event.eventType.uuid)) {\r\n                let eventInfo = new Map();\r\n                eventInfo.set(\"name\", event.eventType.name);\r\n                eventInfo.set(\"count\", 1);\r\n                playerInfo.set(event.eventType.uuid, eventInfo);\r\n            } else {\r\n                let eventInfo = playerInfo.get(event.eventType.uuid);\r\n                eventInfo.set(\"count\", eventInfo.get(\"count\") + 1);\r\n                playerInfo.set(event.eventType.uuid, eventInfo);\r\n            }\r\n\r\n            statistic.set(event.player1.uuid, playerInfo);\r\n\r\n            if (event.player2 !== undefined) {\r\n                if (!statistic.has(event.player2.uuid)) {\r\n                    let playerInfo = new Map();\r\n                    playerInfo.set(\"name\", event.player2.name);\r\n                    statistic.set(event.player2.uuid, playerInfo);\r\n                }\r\n\r\n                let playerInfo = statistic.get(event.player2.uuid);\r\n\r\n                if(this.state.eventTypes.find(x => x.uuid === event.eventType.uuid) === undefined) {\r\n                    let eventTypes = this.state.eventTypes;\r\n                    eventTypes.push(event.eventType);\r\n                    this.setState({\r\n                        eventTypes: eventTypes\r\n                    });\r\n                }\r\n\r\n                if (!playerInfo.has(event.eventType.uuid)) {\r\n                    let eventInfo = new Map();\r\n                    eventInfo.set(\"name\", event.eventType.name);\r\n                    eventInfo.set(\"count\", 1);\r\n                    playerInfo.set(event.eventType.uuid, eventInfo);\r\n                } else {\r\n                    let eventInfo = playerInfo.get(event.eventType.uuid);\r\n                    eventInfo.set(\"count\", eventInfo.get(\"count\") + 1);\r\n                    playerInfo.set(event.eventType.uuid, eventInfo);\r\n                }\r\n\r\n                statistic.set(event.player2.uuid, playerInfo);\r\n             }\r\n        });\r\n\r\n        console.log(statistic);\r\n        this.setState({\r\n            statistic: statistic,\r\n        });\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this.loadStatistic();\r\n    }\r\n\r\n    render() {\r\n        if(this.state.statistic === undefined) {\r\n            return <span>Загрузка...</span>\r\n        }\r\n\r\n        return (\r\n            <table className=\"table\">\r\n                <th>Игрок</th>\r\n                {\r\n                    this.state.eventTypes.map(eventType => {\r\n                        return <th>{eventType.name}</th>;\r\n                    })\r\n                }\r\n                {Array.from(this.state.statistic.values()).map(item => {\r\n                    return(\r\n                        <tr>\r\n                            <td>\r\n                                {item.get(\"name\")}\r\n                            </td>\r\n                            {\r\n                                this.state.eventTypes.map(eventType => {\r\n                                    if(item.has(eventType.uuid)) {\r\n                                        let eventInfo = item.get(eventType.uuid);\r\n                                        if (eventInfo !== undefined) {\r\n                                            return (\r\n                                                <td>{eventInfo.get(\"count\")}</td>\r\n                                            );\r\n                                        }\r\n                                    }\r\n                                    return <td>-</td>;\r\n                                })\r\n                            }\r\n                        </tr>\r\n                    );\r\n                })}\r\n            </table>\r\n        );\r\n    }\r\n}","import React, {ReactNode} from 'react';\r\nimport {HasAuthorizationService, HasDatabaseService} from \"../../Utils/AppDependency\";\r\nimport {Redirect, RouteComponentProps} from 'react-router-dom';\r\nimport Sport from \"../../Models/Sport\";\r\nimport Protocol from \"../../Models/Protocol\";\r\nimport GameEvent from \"../../Models/GameEvent\";\r\nimport EventType from \"../../Models/EventType\";\r\nimport EventsMatrix from \"../../Components/EventsMatrix\";\r\n\r\ntype Dependencies = HasDatabaseService & HasAuthorizationService;\r\n\r\ntype Props = {\r\n    dependencies: Dependencies,\r\n}\r\n\r\ntype State = {\r\n    protocol?: Protocol,\r\n    redirect?: ReactNode,\r\n    time?: number,\r\n    firstPlayer?: string,\r\n    secondPlayer?: string,\r\n    eventTypes: EventType[],\r\n    eventType?: string,\r\n}\r\n\r\ninterface RouteParams {\r\n    protocolId: string,\r\n}\r\n\r\nexport default class CreateProtocolForm extends React.Component<Props & RouteComponentProps<RouteParams>, State>{\r\n    dependencies: Dependencies;\r\n    eventsMatrixRef: React.RefObject<EventsMatrix>;\r\n\r\n    constructor(props: Props & RouteComponentProps<RouteParams>) {\r\n        super(props);\r\n        this.dependencies = props.dependencies;\r\n        this.state = {\r\n            protocol: undefined,\r\n            redirect: undefined,\r\n            time: undefined,\r\n            firstPlayer: undefined,\r\n            secondPlayer: undefined,\r\n            eventTypes: [],\r\n            eventType: undefined,\r\n        };\r\n\r\n        this.eventsMatrixRef = React.createRef<EventsMatrix>();\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this.loadProtocol();\r\n        let eventTypes = this.dependencies.database.getCollection<EventType>(\"eventTypes\");\r\n        this.setState({\r\n            eventTypes: eventTypes,\r\n            eventType: eventTypes[0].uuid,\r\n        });\r\n    }\r\n\r\n    saveEvent(): void {\r\n        if(this.state.protocol === undefined || this.state.eventType === undefined)\r\n            return;\r\n\r\n        let time = this.state.time;\r\n        let firstPlayer = this.state.protocol.firstTeam.players.concat(this.state.protocol.secondTeam.players)\r\n            .find(player => player.uuid === this.state.firstPlayer);\r\n        let secondPlayer = this.state.protocol.firstTeam.players.concat(this.state.protocol.secondTeam.players)\r\n            .find(player => player.uuid === this.state.secondPlayer);\r\n\r\n        let eventType = this.dependencies.database.getItemById<EventType>(\"eventTypes\", this.state.eventType);\r\n\r\n        if(firstPlayer !== undefined && time !== undefined && eventType !== undefined) {\r\n            let event = new GameEvent(time, eventType, firstPlayer, secondPlayer);\r\n            let protocol = this.state.protocol;\r\n            protocol.events.push(event);\r\n            this.dependencies.database.updateItemById(\"protocols\", protocol.uuid, protocol);\r\n            this.loadProtocol();\r\n        }\r\n    }\r\n\r\n    loadProtocol(): void {\r\n        let { protocolId } = this.props.match.params;\r\n        if (protocolId) {\r\n            let protocol = this.dependencies.database.getItemById<Protocol>(\"protocols\", protocolId);\r\n            if(!protocol) {\r\n                this.setState({\r\n                    redirect: <Redirect to=\"/\"/>\r\n                });\r\n            }\r\n            this.setState({\r\n                protocol: protocol,\r\n            });\r\n\r\n            if (this.eventsMatrixRef.current !== null) {\r\n                this.eventsMatrixRef.current.loadStatistic();\r\n            }\r\n        } else {\r\n            this.setState({\r\n                redirect: <Redirect to=\"/\"/>\r\n            });\r\n        }\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        if(this.state.protocol === undefined) {\r\n            return (<span>Загрузка</span>);\r\n        }\r\n        return(\r\n            <div className=\"container\">\r\n                {this.state.redirect}\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"mt-4\">\r\n                            {\r\n                                this.state.protocol.date + \" - \" +  this.state.protocol.sport.name\r\n                            }\r\n                        </h1>\r\n                        <h3>\r\n                            {\r\n                                this.state.protocol.firstTeam.name + \" vs \" +  this.state.protocol.secondTeam.name\r\n                            }\r\n                        </h3>\r\n                        <strong className=\"mt-4\">События:</strong><br/>\r\n                        <table className=\"table\">\r\n                            <tr>\r\n                                <th>Время</th>\r\n                                <th>Игрок 1</th>\r\n                                <th>Игрок 2</th>\r\n                                <th>Тип события</th>\r\n                            </tr>\r\n                            {\r\n                                this.state.protocol.events.map(event => {\r\n                                    return(\r\n                                        <tr key={event.uuid}>\r\n                                            <td>{event.time}</td>\r\n                                            <td>{event.player1.name}</td>\r\n                                            <td>{(event.player2) ? event.player2.name : \"-\"}</td>\r\n                                            <td>{event.eventType.name}</td>\r\n                                        </tr>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </table>\r\n                        <hr/>\r\n                        {\r\n                            (this.dependencies.authService.isAuthorized()) ?\r\n                                <div>\r\n                                    <strong>Добавить событие</strong>\r\n                                    <div className=\"form-inline\">\r\n                                        <input type=\"text\"\r\n                                               className=\"form-control\"\r\n                                               placeholder=\"Время (минуты)\"\r\n                                               onChange={event => this.setState({time: Number(event.target.value)})}/>\r\n                                        <select value={this.state.firstPlayer}\r\n                                                onChange={event => this.setState({firstPlayer: event.target.value})}\r\n                                                className=\"form-control ml-1\">\r\n                                            <option selected disabled>Игрок 1</option>\r\n                                            <optgroup label={this.state.protocol.firstTeam.name}>\r\n                                                {\r\n                                                    this.state.protocol.firstTeam.players.map(player => {\r\n                                                        return(\r\n                                                            <option value={player.uuid}>{player.name}</option>\r\n                                                        );\r\n                                                    })\r\n                                                }\r\n                                            </optgroup>\r\n                                            <optgroup label={this.state.protocol.secondTeam.name}>\r\n                                                {\r\n                                                    this.state.protocol.secondTeam.players.map(player => {\r\n                                                        return(\r\n                                                            <option value={player.uuid}>{player.name}</option>\r\n                                                        );\r\n                                                    })\r\n                                                }\r\n                                            </optgroup>\r\n                                        </select>\r\n                                        <select value={this.state.secondPlayer}\r\n                                                onChange={event => this.setState({secondPlayer: event.target.value})}\r\n                                                className=\"form-control ml-1\">\r\n                                            <option selected disabled>Игрок 2</option>\r\n                                            <option value={undefined}>-</option>\r\n                                            <optgroup label={this.state.protocol.firstTeam.name}>\r\n                                                {\r\n                                                    this.state.protocol.firstTeam.players.map(player => {\r\n                                                        return(\r\n                                                            <option value={player.uuid}>{player.name}</option>\r\n                                                        );\r\n                                                    })\r\n                                                }\r\n                                            </optgroup>\r\n                                            <optgroup label={this.state.protocol.secondTeam.name}>\r\n                                                {\r\n                                                    this.state.protocol.secondTeam.players.map(player => {\r\n                                                        return(\r\n                                                            <option value={player.uuid}>{player.name}</option>\r\n                                                        );\r\n                                                    })\r\n                                                }\r\n                                            </optgroup>\r\n                                        </select>\r\n                                        <select value={this.state.eventType}\r\n                                                onChange={event => this.setState({eventType: event.target.value})}\r\n                                                className=\"form-control ml-1\">\r\n                                            {\r\n                                                this.state.eventTypes.map(eventType => {\r\n                                                    return(\r\n                                                        <option value={eventType.uuid}>{eventType.name}</option>\r\n                                                    );\r\n                                                })\r\n                                            }\r\n                                        </select>\r\n                                        <button onClick={() => this.saveEvent()} className=\"btn btn-primary ml-1\">Добавить</button>\r\n                                    </div>\r\n                                </div> :\r\n                                null\r\n                        }\r\n                        <hr/>\r\n                        <h2>Статистика</h2>\r\n                        <div><strong>Всего событий:</strong> {this.state.protocol.events.length}</div>\r\n                        <div><strong>Время первого события:</strong>&nbsp;\r\n                            {this.state.protocol.events.sort((a, b) => a.time < b.time ? -1 : 1)[0].time}\r\n                        </div>\r\n                        <div><strong>Первое событие:</strong>&nbsp;\r\n                            {this.state.protocol.events.sort((a, b) => a.time < b.time ? -1 : 1)[0].eventType.name}\r\n                        </div>\r\n                        <div><strong>Время последнего события:</strong>&nbsp;\r\n                            {this.state.protocol.events.sort((a, b) => a.time > b.time ? -1 : 1)[0].time}\r\n                        </div>\r\n                        <div><strong>Последнее событие:</strong>&nbsp;\r\n                            {this.state.protocol.events.sort((a, b) => a.time > b.time ? -1 : 1)[0].eventType.name}\r\n                        </div>\r\n                        <strong>Матрица событий</strong>\r\n                        <EventsMatrix ref={this.eventsMatrixRef} protocol={this.state.protocol}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import {StorableWithID} from \"../Services/DatabaseService\";\r\nconst uuidv4 = require('uuid/v4');\r\n\r\nexport default class EventType implements StorableWithID{\r\n    name: string;\r\n    uuid: string;\r\n\r\n    constructor(name: string) {\r\n        this.name = name;\r\n        this.uuid = uuidv4();\r\n    }\r\n}","import React, {ReactNode} from 'react';\r\nimport {HasDatabaseService} from \"../../Utils/AppDependency\";\r\nimport Player from \"../../Models/Player\";\r\nimport Team from \"../../Models/Team\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport EventType from \"../../Models/EventType\";\r\n\r\ntype Dependencies = HasDatabaseService;\r\n\r\ntype Props = {\r\n    dependencies: Dependencies\r\n}\r\n\r\ntype State = {\r\n    name?: string,\r\n    redirect?: ReactNode,\r\n}\r\n\r\nexport default class EventTypeForm extends React.Component<Props, State>{\r\n    dependencies: Dependencies;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.dependencies = props.dependencies;\r\n        this.state = {\r\n            name: undefined,\r\n        };\r\n    }\r\n\r\n    saveEventType() {\r\n        if(this.state.name !== undefined) {\r\n            let eventType = new EventType(this.state.name);\r\n\r\n            this.dependencies.database.saveObject<EventType>(eventType, \"eventTypes\");\r\n            this.setState({\r\n                redirect: <Redirect to=\"/\" />,\r\n            });\r\n        }\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        return(\r\n            <div className=\"container\">\r\n                {this.state.redirect}\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"mt-4\">Создать тип события</h1>\r\n                        <input type=\"text\"\r\n                               onChange={(event) => this.setState({name: event.target.value})}\r\n                               placeholder=\"Название\"\r\n                               className=\"form-control mt-4\"/>\r\n                        <button className=\"btn btn-primary mt-4\"\r\n                                onClick={() => this.saveEventType()}>Сохранить</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import Sport from \"../Models/Sport\";\r\nimport {HasDatabaseService} from \"./AppDependency\";\r\nimport EventType from \"../Models/EventType\";\r\nimport Player from \"../Models/Player\";\r\nimport Team from \"../Models/Team\";\r\n\r\ntype Dependencies = HasDatabaseService;\r\n\r\nexport default class DefaultDataSeeder {\r\n    static seedDefaults(dependencies: Dependencies): void {\r\n        let isFirstLaunch = localStorage.getItem(\"isFirstLaunch\");\r\n\r\n        if (isFirstLaunch !== null) {\r\n            return;\r\n        }\r\n\r\n        [\"Футбол\", \"Баскетбол\"].map(item => {\r\n            let sport = new Sport(item);\r\n            dependencies.database.saveObject<Sport>(sport, \"sports\");\r\n        });\r\n\r\n        [\"Гол\", \"Пас\", \"Бросок\", \"Фол\", \"Карточка\"].map(item => {\r\n            let eventType = new EventType(item);\r\n            dependencies.database.saveObject<Sport>(eventType, \"eventTypes\");\r\n        });\r\n\r\n        let players = [new Player(\"Иванов\"), new Player(\"Сидоров\")];\r\n        let team = new Team(\"Солнышки\", players);\r\n        dependencies.database.saveObject<Team>(team, \"teams\");\r\n\r\n        players = [new Player(\"Петров\"), new Player(\"Соколов\")];\r\n        team = new Team(\"Зайчики\", players);\r\n        dependencies.database.saveObject<Team>(team, \"teams\");\r\n\r\n        localStorage.setItem(\"isFirstLaunch\", \"false\");\r\n    }\r\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport TeamForm from \"./Modules/TeamForm/TeamForm\";\nimport AppDependency from \"./Utils/AppDependency\";\nimport MainScreen from \"./Modules/MainScreen/MainScreen\";\nimport SportForm from \"./Modules/SportForm/SportForm\";\nimport CreateProtocolForm from \"./Modules/Protocol/CreateProtocolForm\";\nimport ProtocolScreen from \"./Modules/Protocol/ProtocolScreen\";\nimport EventTypeForm from \"./Modules/EventsTypeForm/EventTypeForm\";\nimport DefaultDataSeeder from \"./Utils/DefaultDataSeeder\";\n\n\nexport default class App extends React.Component{\n  appDependency: AppDependency;\n\n  constructor() {\n    super({});\n    this.appDependency = AppDependency.makeDefaultDependencies();\n    DefaultDataSeeder.seedDefaults(this.appDependency);\n  }\n\n  render(): React.ReactNode {\n    return (\n        <div className=\"App\">\n          <Router>\n            {\n              (this.appDependency.authService.isAuthorized()) ?\n                  <Switch>\n                    <Route path=\"/addTeam\">\n                      <TeamForm dependencies={this.appDependency}/>\n                    </Route>\n                    <Route path=\"/addSport\">\n                      <SportForm dependencies={this.appDependency}/>\n                    </Route>\n                    <Route path=\"/addEventType\">\n                      <EventTypeForm dependencies={this.appDependency}/>\n                    </Route>\n                    <Route path=\"/protocols/create/:sportId\" render={props => <CreateProtocolForm {...props} dependencies={this.appDependency}/> }/>\n                    <Route path=\"/protocols/:protocolId\" render={props => <ProtocolScreen {...props} dependencies={this.appDependency}/>}/>\n                    <Route path=\"/\">\n                      <MainScreen dependencies={this.appDependency}/>\n                    </Route>\n                  </Switch> :\n                  <Switch>\n                    <Route path=\"/protocols/:protocolId\" render={props => <ProtocolScreen {...props} dependencies={this.appDependency}/>}/>\n                    <Route path=\"/\">\n                      <MainScreen dependencies={this.appDependency}/>\n                    </Route>\n                  </Switch>\n            }\n          </Router>\n        </div>\n    );\n  }\n};\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}